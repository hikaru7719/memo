// Code generated by protoc-gen-go. DO NOT EDIT.
// source: task.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_UNKNOWN  Status = 0
	Status_TODO     Status = 1
	Status_PROGRESS Status = 2
	Status_DONE     Status = 3
)

var Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "TODO",
	2: "PROGRESS",
	3: "DONE",
}

var Status_value = map[string]int32{
	"UNKNOWN":  0,
	"TODO":     1,
	"PROGRESS": 2,
	"DONE":     3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

type Task struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Explanation          string   `protobuf:"bytes,3,opt,name=explanation,proto3" json:"explanation,omitempty"`
	Status               Status   `protobuf:"varint,6,opt,name=status,proto3,enum=task.Status" json:"status,omitempty"`
	UserID               string   `protobuf:"bytes,7,opt,name=userID,proto3" json:"userID,omitempty"`
	Tags                 []*Tag   `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{0}
}

func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (m *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(m, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Task) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Task) GetExplanation() string {
	if m != nil {
		return m.Explanation
	}
	return ""
}

func (m *Task) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UNKNOWN
}

func (m *Task) GetUserID() string {
	if m != nil {
		return m.UserID
	}
	return ""
}

func (m *Task) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Tag struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{1}
}

func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (m *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(m, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateTaskRequest struct {
	Task                 *Task    `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTaskRequest) Reset()         { *m = CreateTaskRequest{} }
func (m *CreateTaskRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTaskRequest) ProtoMessage()    {}
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ce5d8dd45b4a91ff, []int{2}
}

func (m *CreateTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTaskRequest.Unmarshal(m, b)
}
func (m *CreateTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTaskRequest.Marshal(b, m, deterministic)
}
func (m *CreateTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTaskRequest.Merge(m, src)
}
func (m *CreateTaskRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTaskRequest.Size(m)
}
func (m *CreateTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTaskRequest proto.InternalMessageInfo

func (m *CreateTaskRequest) GetTask() *Task {
	if m != nil {
		return m.Task
	}
	return nil
}

func init() {
	proto.RegisterEnum("task.Status", Status_name, Status_value)
	proto.RegisterType((*Task)(nil), "task.Task")
	proto.RegisterType((*Tag)(nil), "task.Tag")
	proto.RegisterType((*CreateTaskRequest)(nil), "task.CreateTaskRequest")
}

func init() { proto.RegisterFile("task.proto", fileDescriptor_ce5d8dd45b4a91ff) }

var fileDescriptor_ce5d8dd45b4a91ff = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4a, 0xeb, 0x40,
	0x14, 0x87, 0x6f, 0xfe, 0xdc, 0xb4, 0x3d, 0xe9, 0x2d, 0xb9, 0x07, 0xd1, 0x50, 0x54, 0x42, 0x70,
	0x11, 0x5d, 0xb4, 0x90, 0x2e, 0x04, 0x97, 0xda, 0x52, 0x44, 0x48, 0x64, 0x12, 0x15, 0xdc, 0x8d,
	0x76, 0x08, 0xa1, 0x35, 0xa9, 0x99, 0xa9, 0xb8, 0xf6, 0x15, 0x7c, 0x0a, 0x9f, 0xc7, 0x57, 0xf0,
	0x41, 0x24, 0x27, 0x15, 0x0b, 0x6e, 0x5c, 0xe5, 0xe4, 0x3b, 0x39, 0xbf, 0xf3, 0x65, 0x06, 0x40,
	0x71, 0x39, 0x1f, 0x2c, 0xab, 0x52, 0x95, 0x68, 0xd6, 0x75, 0x7f, 0x37, 0x2b, 0xcb, 0x6c, 0x21,
	0x86, 0x7c, 0x99, 0x0f, 0x79, 0x51, 0x94, 0x8a, 0xab, 0xbc, 0x2c, 0x64, 0xf3, 0x8d, 0xff, 0xa6,
	0x81, 0x99, 0x72, 0x39, 0xc7, 0x1e, 0xe8, 0xf9, 0xcc, 0xd5, 0x3c, 0x2d, 0xf8, 0xc7, 0xf4, 0x7c,
	0x86, 0x08, 0x66, 0xc1, 0x1f, 0x84, 0xab, 0x7b, 0x5a, 0xd0, 0x61, 0x54, 0xa3, 0x07, 0xb6, 0x78,
	0x5e, 0x2e, 0x78, 0x41, 0x11, 0xae, 0x41, 0xad, 0x4d, 0x84, 0x07, 0x60, 0x49, 0xc5, 0xd5, 0x4a,
	0xba, 0x96, 0xa7, 0x05, 0xbd, 0xb0, 0x3b, 0x20, 0x9f, 0x84, 0x18, 0x5b, 0xf7, 0x70, 0x1b, 0xac,
	0x95, 0x14, 0xd5, 0xf9, 0xd8, 0x6d, 0x51, 0xc4, 0xfa, 0x0d, 0xf7, 0xc0, 0x54, 0x3c, 0x93, 0x6e,
	0xdb, 0x33, 0x02, 0x3b, 0xec, 0x34, 0xb3, 0x29, 0xcf, 0x18, 0x61, 0xff, 0x10, 0x8c, 0x94, 0x67,
	0xbf, 0x31, 0xf5, 0x47, 0xf0, 0xff, 0xac, 0x12, 0x5c, 0x89, 0xfa, 0xdf, 0x98, 0x78, 0x5c, 0x09,
	0xa9, 0x70, 0x1f, 0xe8, 0x44, 0x68, 0xd4, 0x0e, 0xe1, 0x2b, 0x5e, 0xce, 0x19, 0xf1, 0xa3, 0x63,
	0xb0, 0x1a, 0x51, 0xb4, 0xa1, 0x75, 0x15, 0x5d, 0x44, 0xf1, 0x4d, 0xe4, 0xfc, 0xc1, 0x36, 0x98,
	0x69, 0x3c, 0x8e, 0x1d, 0x0d, 0xbb, 0xd0, 0xbe, 0x64, 0xf1, 0x94, 0x4d, 0x92, 0xc4, 0xd1, 0x6b,
	0x3e, 0x8e, 0xa3, 0x89, 0x63, 0x84, 0xd7, 0x60, 0xd7, 0x31, 0x89, 0xa8, 0x9e, 0xf2, 0x7b, 0x81,
	0x53, 0x80, 0xef, 0xe5, 0xb8, 0xd3, 0xec, 0xf9, 0xa1, 0xd3, 0xdf, 0x10, 0xf0, 0xb7, 0x5e, 0xde,
	0x3f, 0x5e, 0xf5, 0x9e, 0x6f, 0x0d, 0x6b, 0x26, 0x4f, 0x48, 0xe8, 0xb4, 0x75, 0xfb, 0x97, 0x6e,
	0xe9, 0xce, 0xa2, 0xc7, 0xe8, 0x33, 0x00, 0x00, 0xff, 0xff, 0x86, 0xf8, 0xd4, 0xe1, 0xde, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TaskServiceClient is the client API for TaskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskServiceClient interface {
	CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*Task, error)
}

type taskServiceClient struct {
	cc *grpc.ClientConn
}

func NewTaskServiceClient(cc *grpc.ClientConn) TaskServiceClient {
	return &taskServiceClient{cc}
}

func (c *taskServiceClient) CreateTask(ctx context.Context, in *CreateTaskRequest, opts ...grpc.CallOption) (*Task, error) {
	out := new(Task)
	err := c.cc.Invoke(ctx, "/task.TaskService/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TaskServiceServer is the server API for TaskService service.
type TaskServiceServer interface {
	CreateTask(context.Context, *CreateTaskRequest) (*Task, error)
}

// UnimplementedTaskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServiceServer struct {
}

func (*UnimplementedTaskServiceServer) CreateTask(ctx context.Context, req *CreateTaskRequest) (*Task, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}

func RegisterTaskServiceServer(s *grpc.Server, srv TaskServiceServer) {
	s.RegisterService(&_TaskService_serviceDesc, srv)
}

func _TaskService_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServiceServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/task.TaskService/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServiceServer).CreateTask(ctx, req.(*CreateTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TaskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "task.TaskService",
	HandlerType: (*TaskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTask",
			Handler:    _TaskService_CreateTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "task.proto",
}
